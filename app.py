{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "92cadc9c-d4f8-455a-b5b7-8f18ca91b0e4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: streamlit in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (1.32.0)\n",
      "Requirement already satisfied: pandas in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (2.2.2)\n",
      "Requirement already satisfied: numpy in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (1.26.4)\n",
      "Requirement already satisfied: scipy in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (1.13.1)\n",
      "Requirement already satisfied: matplotlib in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (3.8.4)\n",
      "Requirement already satisfied: altair<6,>=4.0 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (5.0.1)\n",
      "Requirement already satisfied: blinker<2,>=1.0.0 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (1.6.2)\n",
      "Requirement already satisfied: cachetools<6,>=4.0 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (5.3.3)\n",
      "Requirement already satisfied: click<9,>=7.0 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (8.1.7)\n",
      "Requirement already satisfied: packaging<24,>=16.8 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (23.2)\n",
      "Requirement already satisfied: pillow<11,>=7.1.0 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (10.3.0)\n",
      "Requirement already satisfied: protobuf<5,>=3.20 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (3.20.3)\n",
      "Requirement already satisfied: pyarrow>=7.0 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (14.0.2)\n",
      "Requirement already satisfied: requests<3,>=2.27 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (2.32.2)\n",
      "Requirement already satisfied: rich<14,>=10.14.0 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (13.3.5)\n",
      "Requirement already satisfied: tenacity<9,>=8.1.0 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (8.2.2)\n",
      "Requirement already satisfied: toml<2,>=0.10.1 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (0.10.2)\n",
      "Requirement already satisfied: typing-extensions<5,>=4.3.0 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (4.11.0)\n",
      "Requirement already satisfied: gitpython!=3.1.19,<4,>=3.0.7 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (3.1.37)\n",
      "Requirement already satisfied: pydeck<1,>=0.8.0b4 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (0.8.0)\n",
      "Requirement already satisfied: tornado<7,>=6.0.3 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (6.4.1)\n",
      "Requirement already satisfied: watchdog>=2.1.5 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from streamlit) (4.0.1)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from pandas) (2.9.0.post0)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from pandas) (2024.1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from pandas) (2023.3)\n",
      "Requirement already satisfied: contourpy>=1.0.1 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from matplotlib) (1.2.0)\n",
      "Requirement already satisfied: cycler>=0.10 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from matplotlib) (0.11.0)\n",
      "Requirement already satisfied: fonttools>=4.22.0 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from matplotlib) (4.51.0)\n",
      "Requirement already satisfied: kiwisolver>=1.3.1 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from matplotlib) (1.4.4)\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from matplotlib) (3.0.9)\n",
      "Requirement already satisfied: jinja2 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from altair<6,>=4.0->streamlit) (3.1.4)\n",
      "Requirement already satisfied: jsonschema>=3.0 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from altair<6,>=4.0->streamlit) (4.19.2)\n",
      "Requirement already satisfied: toolz in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from altair<6,>=4.0->streamlit) (0.12.0)\n",
      "Requirement already satisfied: colorama in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from click<9,>=7.0->streamlit) (0.4.6)\n",
      "Requirement already satisfied: gitdb<5,>=4.0.1 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.7)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from requests<3,>=2.27->streamlit) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from requests<3,>=2.27->streamlit) (3.7)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from requests<3,>=2.27->streamlit) (2.2.2)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from requests<3,>=2.27->streamlit) (2024.7.4)\n",
      "Requirement already satisfied: markdown-it-py<3.0.0,>=2.2.0 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from rich<14,>=10.14.0->streamlit) (2.2.0)\n",
      "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from rich<14,>=10.14.0->streamlit) (2.15.1)\n",
      "Requirement already satisfied: smmap<5,>=3.0.1 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.0)\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from jinja2->altair<6,>=4.0->streamlit) (2.1.3)\n",
      "Requirement already satisfied: attrs>=22.2.0 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (23.1.0)\n",
      "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (2023.7.1)\n",
      "Requirement already satisfied: referencing>=0.28.4 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.30.2)\n",
      "Requirement already satisfied: rpds-py>=0.7.1 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.10.6)\n",
      "Requirement already satisfied: mdurl~=0.1 in c:\\users\\svamshi\\appdata\\local\\anaconda3\\lib\\site-packages (from markdown-it-py<3.0.0,>=2.2.0->rich<14,>=10.14.0->streamlit) (0.1.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install streamlit pandas numpy scipy matplotlib\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d2aa8ac7-2016-4c9a-9d4d-2feade88c67e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from scipy.stats import gamma\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "st.title('Bayesian A/B Testing Dashboard')\n",
    "\n",
    "# File uploader for CSV files\n",
    "uploaded_file = st.file_uploader(\"Choose a CSV file\", type=\"csv\")\n",
    "\n",
    "if uploaded_file is not None:\n",
    "    # Read the CSV file into a DataFrame\n",
    "    df = pd.read_csv(uploaded_file)\n",
    "\n",
    "    # Display the uploaded data\n",
    "    st.write(\"### Uploaded Data\")\n",
    "    st.write(df)\n",
    "\n",
    "    # Prior parameters for Gamma distribution (shape and scale)\n",
    "    alpha_prior = 1\n",
    "    beta_prior = 1\n",
    "\n",
    "    # Function to calculate posterior distribution parameters\n",
    "    def posterior(alpha_prior, beta_prior, n, x):\n",
    "        alpha_post = alpha_prior + x\n",
    "        beta_post = beta_prior + n\n",
    "        return alpha_post, beta_post\n",
    "\n",
    "    # List of metrics to evaluate\n",
    "    metrics = [\"MTX_REVENUE\", \"TRUE_SPENDERS\"]\n",
    "\n",
    "    for metric in metrics:\n",
    "        posteriors = {}\n",
    "        for index, row in df.iterrows():\n",
    "            n = row[\"N_ELIGIBLE\"]\n",
    "            x = row[metric]\n",
    "            alpha_post, beta_post = posterior(alpha_prior, beta_prior, n, x)\n",
    "            posteriors[row[\"Variant\"]] = gamma(alpha_post, scale=1/beta_post)\n",
    "\n",
    "        # Sample from the posterior distributions\n",
    "        np.random.seed(42)\n",
    "        samples = 100000\n",
    "        posterior_samples = {\n",
    "            variant: post.rvs(samples) for variant, post in posteriors.items()\n",
    "        }\n",
    "\n",
    "        # Calculate the probability that Test A and Test B are better than Control\n",
    "        prob_test_a_better = np.mean(posterior_samples[\"TEST_A\"] > posterior_samples[\"CONTROL\"])\n",
    "        prob_test_b_better = np.mean(posterior_samples[\"TEST_B\"] > posterior_samples[\"CONTROL\"])\n",
    "\n",
    "        # Calculate 95% credible intervals\n",
    "        credible_intervals = {\n",
    "            variant: np.percentile(samples, [2.5, 97.5]) for variant, samples in posterior_samples.items()\n",
    "        }\n",
    "\n",
    "        # Add probability and credible intervals to the DataFrame\n",
    "        df[f\"Prob_{metric}_Better_than_Control\"] = [None, prob_test_a_better, prob_test_b_better]\n",
    "        df[f\"Credible_Interval_{metric}\"] = [\n",
    "            f\"{credible_intervals['CONTROL'][0]:.4f} to {credible_intervals['CONTROL'][1]:.4f}\",\n",
    "            f\"{credible_intervals['TEST_A'][0]:.4f} to {credible_intervals['TEST_A'][1]:.4f}\",\n",
    "            f\"{credible_intervals['TEST_B'][0]:.4f} to {credible_intervals['TEST_B'][1]:.4f}\"\n",
    "        ]\n",
    "\n",
    "        # Display results in the app\n",
    "        st.write(f\"### Results for {metric}\")\n",
    "        st.write(df[[f\"Prob_{metric}_Better_than_Control\", f\"Credible_Interval_{metric}\"]])\n",
    "\n",
    "        # Plot the posterior distributions for CONTROL vs TEST_A\n",
    "        x = np.linspace(0, max(posterior_samples[\"CONTROL\"].max(), posterior_samples[\"TEST_A\"].max()), 1000)\n",
    "        control_pdf = posteriors[\"CONTROL\"].pdf(x)\n",
    "        test_a_pdf = posteriors[\"TEST_A\"].pdf(x)\n",
    "        \n",
    "        plt.figure(figsize=(10, 6))\n",
    "        plt.plot(x, control_pdf, label='CONTROL', lw=2)\n",
    "        plt.plot(x, test_a_pdf, label='TEST_A', lw=2)\n",
    "        plt.title(f'Posterior Distributions for {metric} (CONTROL vs TEST_A)')\n",
    "        plt.xlabel('Value')\n",
    "        plt.ylabel('Density')\n",
    "        plt.legend()\n",
    "        st.pyplot(plt)\n",
    "\n",
    "        # Plot the posterior distributions for CONTROL vs TEST_B\n",
    "        test_b_pdf = posteriors[\"TEST_B\"].pdf(x)\n",
    "        \n",
    "        plt.figure(figsize=(10, 6))\n",
    "        plt.plot(x, control_pdf, label='CONTROL', lw=2)\n",
    "        plt.plot(x, test_b_pdf, label='TEST_B', lw=2)\n",
    "        plt.title(f'Posterior Distributions for {metric} (CONTROL vs TEST_B)')\n",
    "        plt.xlabel('Value')\n",
    "        plt.ylabel('Density')\n",
    "        plt.legend()\n",
    "        st.pyplot(plt)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
